ROS笔记 

1 配置环境

查看环境：export | grep ROS
初始化ROS的catkin工作空间：catkin_init_workspace 
编译ROS的catkin工作空间：catkin_make 
读取当前catkin工作空间的环境变量：source devel/setup.sh 
验证ROS工作空间的环境变量加载成功：echo $ROS_PACKAGE_PATH

2 文件系统

获取软件包的有关信息：rospack find [包名称]
直接切换(cd)工作目录到某个软件包或者软件包集当中：roscd [本地包名称[/子目录]]
罗列目录 ：rosls [本地包名称[/子目录]]

注意：由于rospack、roscd、rosls命令行工具都是针对ROS软件包进行的，所以一定要将要操作的软件包加入到ROS_PACKAGE_PATH变量中。

3 软件包

catkin软件包必要组成：package.xml和CMakeList.txt文件。
创建catkin软件包：catkin_create_pkg命令创建一个新的catkin软件包。
编译catkin工作空间：catkin_make命令编译catkin工作空间。
查看ROS软件包依赖：rospack depends1[] 查看直接依赖，rospack depends[] 查看间接依赖。   
定制catkin软件包：修改文件package.xml和CMakeLists.txt。

注意：软件包命名惯例是―以小写字母开头，只能包含小写字母和数字以及下划线，不符合规则的软件包名称将不能编译通过。

4 ROS节点

列出活跃的节点：rosnode list
返回节点的信息: rosnode info
查看节点关系图：rosrun rqt_graph rqt_graph
运行一个给定软件包中的节点:  rosrun [package_name] [node_name]
启动多个节点：  roslunch 

5 ROS topics

显示topic1上所发布的数据：rostopic echo topic1 
列出当前处于激活状态的topic列表：rostopic list -v 
显示topic1的数据类型：rostopic type topic1 
显示类型更加详细的信息：rosmsg show type1 
直接向主题topic1发布数据：rostopic pub [topic1] [msg_type] [args] 
显示主题topic1上数据的发布速率：rostopic hz [topic1]

6 ROS service

主要分为ROS服务和参数两个部分 
服务，主要命令工具是rosservice： 
列出所有服务：rosservice list 
查看服务类型：rosservice type [service] 
调用服务：rosservice call [service] [args]

参数，主要命令工具是rosparam： 
设置参数：rosparam set [param] 
获得参数：rosparam get [param] 
写入参数：rosparam dump [filename] [namespace] 
载入参数：rosparam load [filename] [namespace]

7 使用rqt_console和roslaunch

显示节点的输出信息：rosrun rqt_console rqt_console
用于设置输出信息的重要性等级：rosrun rqt_logger_level rqt_logger_level
'''
rosparam set            设置参数
rosparam get            获取参数
rosparam load           从文件读取参数
rosparam dump           向文件中写入参数
rosparam delete         删除参数
rosparam list           列出参数名
'''
日志等级说明(高->低)
Fatal
Error
Warn
Info
Debug
'''
一次性打开在一个launch文件中定义的所有节点：roslaunch [package] [launch.file] [args]

8 ROS msg和srv

修改package.xml文件
 确保它包含一下两条语句:<build_depend>message_generation</build_depend>
                        <run_depend>message_runtime</run_depend>
修改CMakeist.txt文件
  1 在find_package函数中加入message_generation依赖
  2 在catkin_package函数中加入message_runtime依赖
  3 修改add_message_file函数，添加入自己创建的.msg文件,或者在add_service_file函数中添加入自己创建的srv文件
  4 确保generate_messages函数被调用运行，去掉注释符号#
重新编译生成软件包

9 C++编写ROS

1 在一个package中新建src文件夹 可在其中编写C++代码
2 修改增加CMakeLists.txt 
3 编译新建节点  catkin_make
4 可执行文件添加对生成的消息文件的依赖：add_dependencies([file] ${catkin_EXPORTED_TARGETS})
5 检验创建的节点 roscore  rosrun [package_name] [file]

10 录制与回放数据

1 创建一个bag文件夹  mkdir ~/bag_files  cd ~/bag_files  
2.1 记录所有的topics   rosbag record -a
2.2 记录指定的topics   例:ros record -O subset /turtle1/cmd_vel /turtle1/pose
3 查看bag文件的信息  rosbag info <your bagfile>        也可以用GUI: rqt_bag
4 回放 rosbag play <your bagfile>        附:-r 2 2倍速度

11 roswtf
用来编译或者通信之类的问题困扰的时候 ：roswtf
安装检查 运行时检查

robot_upstart使用备忘
安装  rosrun robot_upstart install --job SERVICE_NAME --user USER -logdir ~/catkin_ws/logs/
      程序将以SERVICE_NAME的系统service启动运行
      程序将被名为USER的用户启动
      程序输出的日志将会保存在~/catkin_ws/logs目录下
卸载  rosrun robot_upstart uninstall SERVICE_NAME 

12开机自启动
方法1：
Robot_upstart:
The robot_upstart package provides scripts which may be used to install and uninstall Ubuntu Linux upstart jobs which launch groups of roslaunch files.
这个方法可能仅支持Ubuntu Linux。它提供scripte来安装和卸载随机启动的ROS工作。 可以使用roslaunch等  
安装：sudo apt-get install ros-kinetc-robot-upstart 
设置：rosrun robot_upstart install [package]/launch/[***].launch
      rosrun robot_upstart uninstall service名
service 启动和停止： sudo service service名 start
                     sudo service service名 stop
查看log:   sudo vi /var/log/upstart/[***].log
方法2：
vi /etc/init.d/launch
写入
#!bin/sh
.  /opt/ros/indigo/setup.sh 
.  /home/ubuntu/catkin_ws/devel/setup.sh 
roslaunch [package]/launch/[***].launch 

sudo update-rc.d launch defaults 95    |  sudo update-rc.d -f launch remove

12多机通讯：https://blog.csdn.net/shiyue0010/article/details/51924941
  修改/etc/hosts文件     例：192.168.0.50    ***-desktop
  重启网络： sudo /etc/init.d/networking restart
实现电脑之间的通信 
  装上chrony包，实现时间同步：sudo apt-get install chrony
  
问题：
实时显示一个发布到某个话题上的数据变化图形  rosrun rqt_plot rqt_plot

里面/turtle1/pose/x   /turtle1/pose/y  /turtle1/pose/theta 图里对应的参数是什么含义
